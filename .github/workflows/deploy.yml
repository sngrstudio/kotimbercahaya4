name: Build, Test & Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: Build Site
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build your site
        env:
          ELEVENTY_ENV: prod
        run: npm run build

      - name: Upload Pages Artifact
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4
        with:
          name: build-files
          path: 'dist'

  test:
    name: Lighthouse CI Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Get .lighthouserc.json
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          sparse-checkout: |
            .lighthouserc.json
          sparse-checkout-cone-mode: false

      - name: Get Site Artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          name: build-files
          path: dist

      - name: Test with Lighthouse CI
        uses: treosh/lighthouse-ci-action@2f8dda6cf4de7d73b29853c3f29e73a01e297bd8 # v12
        continue-on-error: true
        with:
          configPath: './.lighthouserc.json'
          temporaryPublicStorage: true

  deploy:
    name: Deploy to Cloudflare Pages
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Get Site Artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          name: build-files
          path: dist

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: cloudflare/wrangler-action@f84a562284fc78278ff9052435d9526f9c718361 # v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy dist --project-name=kotimbercahaya4
